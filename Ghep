--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Replicated = game:GetService("ReplicatedStorage")

--// Local Player
local plr = Players.LocalPlayer
repeat task.wait() until plr and plr:FindFirstChild("PlayerGui")

--// Intro
local guiIntro = Instance.new("ScreenGui")
guiIntro.Parent = plr.PlayerGui
guiIntro.ResetOnSpawn = false
guiIntro.Name = "IntroGui"

local frameIntro = Instance.new("Frame")
frameIntro.Parent = guiIntro
frameIntro.Size = UDim2.new(1,0,1,0)
frameIntro.BackgroundTransparency = 1

local function createText(t,y,s)
    local l = Instance.new("TextLabel")
    l.Parent = frameIntro
    l.Text = t
    l.Size = UDim2.new(0,600,0,60)
    l.Position = UDim2.new(0.5,0,0.5,y)
    l.AnchorPoint = Vector2.new(0.5,0.5)
    l.BackgroundTransparency = 1
    l.TextColor3 = Color3.new(1,1,1)
    l.TextStrokeTransparency = 0.2
    l.TextStrokeColor3 = Color3.fromRGB(0,170,255)
    l.Font = Enum.Font.GothamBold
    l.TextTransparency = 1
    l.TextScaled = false
    l.TextSize = s or 36
    return l
end

local main = createText("script made by trongluong",-35,38)
local sub = createText("ver 1.0.0",10,26)

local function fade(lbl, a)
    if lbl and lbl.Parent then
        TweenService:Create(lbl, TweenInfo.new(1), {TextTransparency = a}):Play()
    end
end

fade(main,0); fade(sub,0)
task.wait(2)
fade(main,1); fade(sub,1)
task.wait(1.5)
pcall(function() guiIntro:Destroy() end)

--// MAIN MENU
local ver = "v0.3.4"
local FTFHAX = Instance.new("ScreenGui", plr.PlayerGui)
FTFHAX.Name = "FTFHAX"

local MenusTabFrame = Instance.new("Frame", FTFHAX)
MenusTabFrame.Name = "MenusTabFrame"
MenusTabFrame.AnchorPoint = Vector2.new(1, 0.5)
MenusTabFrame.BackgroundTransparency = 1
MenusTabFrame.Position = UDim2.new(1, 0, 0.5, 0)
MenusTabFrame.Size = UDim2.new(0.08, 0, 0.16, 0)
MenusTabFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY

local CheatButton = Instance.new("ImageButton", MenusTabFrame)
CheatButton.Name = "CheatButton"
CheatButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CheatButton.BackgroundTransparency = 0.5
CheatButton.BorderSizePixel = 0
CheatButton.Position = UDim2.new(0, 0, 0.75, 0)
CheatButton.Size = UDim2.new(1, 0, 1, 0)
CheatButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
CheatButton.Image = "rbxassetid://7059346373"

local TextLabel = Instance.new("TextLabel", CheatButton)
TextLabel.AnchorPoint = Vector2.new(0, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0, 0, 1, 0)
TextLabel.Size = UDim2.new(1, 0, 0.2, 0)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "setting"
TextLabel.TextColor3 = Color3.new(1,1,1)
TextLabel.TextScaled = true
TextLabel.TextStrokeTransparency = 0
TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom

local MainMenuWindow = Instance.new("Frame", FTFHAX)
MainMenuWindow.Name = "MainMenuWindow"
MainMenuWindow.AnchorPoint = Vector2.new(0.5, 0.5)
MainMenuWindow.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
MainMenuWindow.BorderSizePixel = 2
MainMenuWindow.Position = UDim2.new(0.5, 0, 0.5, -18)
MainMenuWindow.Size = UDim2.new(0, 420, 0, 320)
MainMenuWindow.Visible = false

local TopBar_2 = Instance.new("Frame", MainMenuWindow)
TopBar_2.Name = "TopBar"
TopBar_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
TopBar_2.Size = UDim2.new(1, 0, 0, 40)

local CloseButton_2 = Instance.new("TextButton", TopBar_2)
CloseButton_2.Name = "CloseButton"
CloseButton_2.AnchorPoint = Vector2.new(1, 0)
CloseButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton_2.Position = UDim2.new(1, -1, 0, 1)
CloseButton_2.Size = UDim2.new(0, 36, 0, 36)
CloseButton_2.Text = "X"
CloseButton_2.Font = Enum.Font.GothamBold
CloseButton_2.TextColor3 = Color3.new(1,1,1)
CloseButton_2.TextScaled = true

local PageTitleText_2 = Instance.new("TextLabel", TopBar_2)
PageTitleText_2.Name = "PageTitleText"
PageTitleText_2.BackgroundTransparency = 1
PageTitleText_2.Position = UDim2.new(0, 10, 0, 0)
PageTitleText_2.Size = UDim2.new(0.8, 0, 0, 40)
PageTitleText_2.Text = "Extended Flee The Facility"
PageTitleText_2.Font = Enum.Font.GothamBold
PageTitleText_2.TextColor3 = Color3.new(1,1,1)
PageTitleText_2.TextScaled = true
PageTitleText_2.TextXAlignment = Enum.TextXAlignment.Left

local Body_2 = Instance.new("Frame", MainMenuWindow)
Body_2.Name = "Body"
Body_2.AnchorPoint = Vector2.new(0.5, 0)
Body_2.BackgroundTransparency = 1
Body_2.Position = UDim2.new(0.5, 0, 0, 45)
Body_2.Size = UDim2.new(1, -10, 1, -50)

local UIGridLayout_2 = Instance.new("UIGridLayout", Body_2)
UIGridLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
UIGridLayout_2.CellSize = UDim2.new(0, 132, 0, 132)

local Button1 = Instance.new("ImageButton")
local Button2 = Instance.new("ImageButton")
local Button3 = Instance.new("ImageButton")
local Button4 = Instance.new("ImageButton")
local Button5 = Instance.new("ImageButton")
local Button6 = Instance.new("ImageButton")

--// Toggle system (same as original)
local activeStates = {}
local function makeButton(btn, text, iconId, index, callback)
    btn.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    btn.Size = UDim2.new(0, 100, 0, 100)
    btn.Parent = Body_2

    local icon = Instance.new("ImageLabel", btn)
    icon.BackgroundTransparency = 1
    icon.AnchorPoint = Vector2.new(0.5,0.5)
    icon.Position = UDim2.new(0.5,0,0.45,0)
    icon.Size = UDim2.new(0.9,0,0.9,0)
    icon.Image = iconId or ""

    local bottom = Instance.new("TextLabel", btn)  
    bottom.BackgroundTransparency = 1  
    bottom.Position = UDim2.new(0, 0, 0.8, 0)  
    bottom.Size = UDim2.new(1, 0, 0.2, 0)  
    bottom.Text = text  
    bottom.Font = Enum.Font.GothamBold  
    bottom.TextColor3 = Color3.new(1,1,1)  
    bottom.TextScaled = true  

    activeStates[index] = false
    btn.MouseButton1Down:Connect(function()
        activeStates[index] = not activeStates[index]
        if activeStates[index] then
            btn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        else
            btn.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
        end
        if callback then callback(activeStates[index]) end
    end)
end

-- Forward-declare functions (so original makeButton calls can remain in same place)
local startBeastTracker, stopBeastTracker, setBeastTrackerVisible
local startPCProgress, stopPCProgress

-- ===== Beast Tracker =====
do
    local beastConnections = {}
    local beastTrackerRunning = false

    local function disconnectBeastTracker()
        for _,c in ipairs(beastConnections) do
            if typeof(c) == "RBXScriptConnection" then
                c:Disconnect()
            end
        end
        beastConnections = {}
    end

    function setBeastTrackerVisible(state)
        local g = plr.PlayerGui:FindFirstChild("BeastCooldownUI")
        if g and g:IsA("ScreenGui") then
            g.Enabled = state
        end
    end

    function stopBeastTracker()
        disconnectBeastTracker()
        local gui = plr.PlayerGui:FindFirstChild("BeastCooldownUI")
        if gui then gui.Enabled = false end
        setBeastTrackerVisible(false)
        beastTrackerRunning = false
    end

    function startBeastTracker()
        if beastTrackerRunning then return end
        beastTrackerRunning = true

        local PlayerGui = plr:WaitForChild("PlayerGui")
        local gui = PlayerGui:FindFirstChild("BeastCooldownUI")
        if not gui then
            gui = Instance.new("ScreenGui")
            gui.Name = "BeastCooldownUI"
            gui.ResetOnSpawn = false
            gui.IgnoreGuiInset = true
            gui.Enabled = true
            gui.Parent = PlayerGui

            local frame = Instance.new("Frame", gui)
            frame.Size = UDim2.new(0,180,0,40)
            frame.Position = UDim2.new(0.5,-90,0.8,0)
            frame.BackgroundTransparency = 0.3
            frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
            frame.BorderSizePixel = 0
            frame.Active = true

            local label = Instance.new("TextLabel", frame)
            label.Name = "CooldownLabel"
            label.Size = UDim2.new(1,0,1,0)
            label.BackgroundTransparency = 1
            label.TextColor3 = Color3.new(1,1,1)
            label.Font = Enum.Font.SourceSansBold
            label.TextScaled = true
            label.Text = "Finding new beast..."

            -- Dragging
            local dragging, dragStart, startPos
            local function startDrag(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging, dragStart, startPos = true, input.Position, frame.Position
                end
            end
            local function stopDrag(input)
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end
            local function updateDrag(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    local delta = input.Position - dragStart
                    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                               startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                end
            end
            frame.InputBegan:Connect(startDrag)
            frame.InputEnded:Connect(stopDrag)
            label.InputBegan:Connect(startDrag)
            label.InputEnded:Connect(stopDrag)
            table.insert(beastConnections, UIS.InputChanged:Connect(updateDrag))
        end

        -- Rainbow border
        local function createRainbowBorder(frame)
            local gradient = Instance.new("UIGradient")
            gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
                ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 127, 0)),
                ColorSequenceKeypoint.new(0.33, Color3.fromRGB(255, 255, 0)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
                ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
                ColorSequenceKeypoint.new(0.83, Color3.fromRGB(75, 0, 130)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(148, 0, 211)),
            })
            gradient.Parent = frame
            local conn
            conn = RunService.RenderStepped:Connect(function()
                if gradient and gradient.Parent then
                    gradient.Rotation = (gradient.Rotation + 1) % 360
                else
                    conn:Disconnect()
                end
            end)
            table.insert(beastConnections, conn)
        end

        -- Banner
        local function showBanner(text, name)
            if PlayerGui:FindFirstChild(name) then return end
            local gui = Instance.new("ScreenGui", PlayerGui)
            gui.Name = name
            local label = Instance.new("TextLabel", gui)
            label.Size = UDim2.new(0, 250, 0, 40)
            label.Position = UDim2.new(1, 10, 0, 10)
            label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            label.TextColor3 = Color3.new(1, 1, 1)
            label.Font = Enum.Font.SourceSansBold
            label.TextScaled = true
            label.Text = text
            createRainbowBorder(label)

            local tweenIn = TweenService:Create(label, TweenInfo.new(0.4), {Position = UDim2.new(1, -270, 0, 10)})
            local tweenOut = TweenService:Create(label, TweenInfo.new(0.4), {Position = UDim2.new(1, 10, 0, 10)})

            tweenIn:Play()
            tweenIn.Completed:Wait()
            task.delay(3.4, function()
                tweenOut:Play()
                tweenOut.Completed:Wait()
                gui:Destroy()
            end)
        end

        -- Beast detect
        local beast, foundBeast, skill = nil, false, "Unknown"
        local runnerCD, stalkerCD = false, false

        local function detectBeast()
            for _, p in ipairs(Players:GetPlayers()) do
                local stats = p:FindFirstChild("TempPlayerStatsModule") or p:FindFirstChild("PlayerStats")
                if stats and stats:FindFirstChild("IsBeast") and stats.IsBeast.Value then
                    return p
                end
            end
            return nil
        end

        local function detectSkill(b)
            if not b then return "Unknown" end
            local stats = b:FindFirstChild("TempPlayerStatsModule") or b:FindFirstChild("PlayerStats")
            if not stats then return "Unknown" end
            local chosen = stats:FindFirstChild("SkillChosen")
            return chosen and chosen.Value or "Unknown"
        end

        -- Loop tìm Beast
        task.spawn(function()
            while beastTrackerRunning do
                beast = detectBeast()
                if beast and not foundBeast then
                    foundBeast = true
                    showBanner("Đã tìm thấy Beast !!!", "BeastBanner")
                    skill = detectSkill(beast)
                    showBanner("Beast chọn "..skill, "SkillChosenBanner")
                end
                task.wait(1)
            end
        end)

        -- Cooldowns
        local function onRunnerUsed()
            if runnerCD then return end
            runnerCD = true
            showBanner("Beast đã dùng Q (Runner) !!!", "RunnerUsedBanner")
            task.delay(30, function() runnerCD = false end)
        end
        local function onStalkerUsed()
            if stalkerCD then return end
            stalkerCD = true
            showBanner("Beast đã dùng Q (Stalker) !!!", "StalkerUsedBanner")
            task.delay(20, function() stalkerCD = false end)
        end

        task.spawn(function()
            while beastTrackerRunning do
                if beast and beast.Character then
                    local hrp = beast.Character:FindFirstChild("HumanoidRootPart")
                    if skill == "Runner" and hrp and hrp.AssemblyLinearVelocity.Magnitude > 70 then
                        onRunnerUsed()
                    end
                    if skill == "Stalker" and not beast.Character:FindFirstChild("Light") then
                        onStalkerUsed()
                    end
                end
                task.wait(0.2)
            end
        end)
    end
end

-- ===== PC Progress =====
do
    local pcConnections = {}
    local pcTrackerRunning = false

    local function disconnectPC()
        for _,c in ipairs(pcConnections) do
            if typeof(c) == "RBXScriptConnection" then
                c:Disconnect()
            end
        end
        pcConnections = {}
    end

    function stopPCProgress()
        disconnectPC()
        local gui = plr.PlayerGui:FindFirstChild("PCProgressUI")
        if gui then gui:Destroy() end
        pcTrackerRunning = false
    end

    function startPCProgress()
        if pcTrackerRunning then return end
        pcTrackerRunning = true

        local PlayerGui = plr:WaitForChild("PlayerGui")
        local gui = PlayerGui:FindFirstChild("PCProgressUI")
        if not gui then
            gui = Instance.new("ScreenGui")
            gui.Name = "PCProgressUI"
            gui.ResetOnSpawn = false
            gui.IgnoreGuiInset = true
            gui.Parent = PlayerGui
        end

        -- Hàm check visibility (raycast với offset)
        local function isVisible(partPos, part, camPos)
            local params = RaycastParams.new()
            params.FilterType = Enum.RaycastFilterType.Blacklist
            params.FilterDescendantsInstances = {plr.Character, part.Parent}

            local dir = (partPos - camPos)
            local result = workspace:Raycast(camPos, dir, params)
            if not result or result.Instance:IsDescendantOf(part.Parent) then
                return true
            end

            local CHECK_RADIUS = 3
            local offsets = {
                Vector3.new(CHECK_RADIUS, 0, 0),
                Vector3.new(-CHECK_RADIUS, 0, 0),
                Vector3.new(0, CHECK_RADIUS, 0),
                Vector3.new(0, -CHECK_RADIUS, 0),
                Vector3.new(0, 0, CHECK_RADIUS),
                Vector3.new(0, 0, -CHECK_RADIUS)
            }

            for _,offset in ipairs(offsets) do
                local p = partPos + offset
                local d = (p - camPos)
                local r = workspace:Raycast(camPos, d, params)
                if not r or r.Instance:IsDescendantOf(part.Parent) then
                    return true
                end
            end
            return false
        end

        -- Create label tracker
        local function createPCLabel(pc)
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "PCLabel"
            billboard.Adornee = pc
            billboard.Size = UDim2.new(0,100,0,40)
            billboard.AlwaysOnTop = true
            billboard.Parent = gui

            local label = Instance.new("TextLabel", billboard)
            label.Size = UDim2.new(1,0,1,0)
            label.BackgroundTransparency = 0.3
            label.BackgroundColor3 = Color3.fromRGB(20,20,20)
            label.TextColor3 = Color3.new(0,1,0)
            label.TextStrokeTransparency = 0
            label.Font = Enum.Font.GothamBold
            label.TextScaled = true
            label.Text = "??%"

            return label
        end

        -- Loop update progress
        task.spawn(function()
            while pcTrackerRunning do
                local cam = workspace.CurrentCamera
                local camPos = cam.CFrame.Position

                for _,comp in ipairs(workspace:GetDescendants()) do
                    if comp.Name == "ComputerTrigger" and comp:IsA("Part") then
                        local surface = comp:FindFirstChild("SurfaceGui")
                        if surface and surface:FindFirstChild("ProgressBar") then
                            local bar = surface.ProgressBar
                            local percent = math.floor((bar.AbsoluteSize.X/bar.Parent.AbsoluteSize.X)*100)

                            local label = comp:FindFirstChild("PCLabel")
                            if not label then
                                label = createPCLabel(comp)
                            end
                            if label and label:IsA("BillboardGui") then
                                local textLabel = label:FindFirstChildOfClass("TextLabel")
                                if textLabel then
                                    if isVisible(comp.Position, comp, camPos) then
                                        textLabel.Text = percent.."%"
                                        textLabel.Visible = true
                                    else
                                        textLabel.Visible = false
                                    end
                                end
                            end
                        end
                    end
                end
                task.wait(0.5)
            end
        end)
    end
end

-- ===== Gán nút vào menu =====

makeButton(Button1,"Wallhop view","rbxassetid://16994563429",1,function(state)
    if state then
        print("Wallhop view bật")
    else
        print("Wallhop view tắt")
    end
end)

makeButton(Button2,"Flashlight","rbxassetid://106585954087372",2,function(state)
    if state then
        print("Flashlight bật")
    else
        print("Flashlight tắt")
    end
end)

makeButton(Button3,"Self muting","rbxassetid://90332761263250",3,function(state)
    if state then
        print("Self muting bật")
    else
        print("Self muting tắt")
    end
end)

makeButton(Button4,"Beast tracker","rbxassetid://9125495609",4,function(state)
    if state then
        startBeastTracker()
        setBeastTrackerVisible(true)
    else
        stopBeastTracker()
    end
end)

makeButton(Button5,"Survivor tracker","rbxassetid://90682070728446",5,function(state)
    if state then
        print("Survivor tracker bật")
    else
        print("Survivor tracker tắt")
    end
end)

makeButton(Button6,"PC progress","rbxassetid://12684119225",6,function(state)
    if state then
        startPCProgress()
    else
        stopPCProgress()
    end
end)

-- ===== Sự kiện mở/đóng menu =====

CheatButton.MouseButton1Down:Connect(function()
    MainMenuWindow.Visible = not MainMenuWindow.Visible
end)

CloseButton_2.MouseButton1Down:Connect(function()
    MainMenuWindow.Visible = false
end)
