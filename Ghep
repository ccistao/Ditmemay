--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Replicated = game:GetService("ReplicatedStorage")

--// Local Player
local plr = Players.LocalPlayer
repeat task.wait() until plr and plr:FindFirstChild("PlayerGui")

--// Intro
local guiIntro = Instance.new("ScreenGui")
guiIntro.Parent = plr.PlayerGui
guiIntro.ResetOnSpawn = false
guiIntro.Name = "IntroGui"

local frameIntro = Instance.new("Frame")
frameIntro.Parent = guiIntro
frameIntro.Size = UDim2.new(1,0,1,0)
frameIntro.BackgroundTransparency = 1

local function createText(t,y,s)
    local l = Instance.new("TextLabel")
    l.Parent = frameIntro
    l.Text = t
    l.Size = UDim2.new(0,600,0,60)
    l.Position = UDim2.new(0.5,0,0.5,y)
    l.AnchorPoint = Vector2.new(0.5,0.5)
    l.BackgroundTransparency = 1
    l.TextColor3 = Color3.new(1,1,1)
    l.TextStrokeTransparency = 0.2
    l.TextStrokeColor3 = Color3.fromRGB(0,170,255)
    l.Font = Enum.Font.GothamBold
    l.TextTransparency = 1
    l.TextScaled = false
    l.TextSize = s or 36
    return l
end

local main = createText("script made by trongluong",-35,38)
local sub = createText("ver 1.0.0",10,26)

local function fade(lbl, a)
    if lbl and lbl.Parent then
        TweenService:Create(lbl, TweenInfo.new(1), {TextTransparency = a}):Play()
    end
end

fade(main,0); fade(sub,0)
task.wait(2)
fade(main,1); fade(sub,1)
task.wait(1.5)
pcall(function() guiIntro:Destroy() end)

--// Detect Platform
local function isMobile()
    return UIS.TouchEnabled and not UIS.KeyboardEnabled
end

--// MAIN MENU
local ver = "v0.3.4"
local FTFHAX = Instance.new("ScreenGui", plr.PlayerGui)
FTFHAX.Name = "FTFHAX"

local MenusTabFrame = Instance.new("Frame", FTFHAX)
MenusTabFrame.Name = "MenusTabFrame"
MenusTabFrame.AnchorPoint = Vector2.new(1, 0.5)
MenusTabFrame.BackgroundTransparency = 1
MenusTabFrame.Position = UDim2.new(1, 0, 0.5, 0)
MenusTabFrame.Size = UDim2.new(0.08, 0, 0.16, 0)
MenusTabFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY

local CheatButton = Instance.new("ImageButton", MenusTabFrame)
CheatButton.Name = "CheatButton"
CheatButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CheatButton.BackgroundTransparency = 0.5
CheatButton.BorderSizePixel = 0
CheatButton.Position = UDim2.new(-0.08, 0, 0.79, 0)
CheatButton.Size = UDim2.new(1.12, 0, 1.12, 0)
CheatButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
CheatButton.Image = "rbxassetid://7059346373"

local TextLabel = Instance.new("TextLabel", CheatButton)
TextLabel.AnchorPoint = Vector2.new(0, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0, 0, 1, 0)
TextLabel.Size = UDim2.new(1, 0, 0.2, 0)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "setting"
TextLabel.TextColor3 = Color3.new(1,1,1)
TextLabel.TextScaled = true
TextLabel.TextStrokeTransparency = 0
TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom

local MainMenuWindow = Instance.new("Frame", FTFHAX)
MainMenuWindow.Name = "MainMenuWindow"
MainMenuWindow.AnchorPoint = Vector2.new(0.5, 0.5)
MainMenuWindow.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
MainMenuWindow.BorderSizePixel = 3
MainMenuWindow.BorderColor3 = Color3.fromRGB(1, 1, 1)
MainMenuWindow.Position = UDim2.new(0.5, 0, 0.5, -29)
MainMenuWindow.Size = UDim2.new(0, 672, 0, 510)
MainMenuWindow.Visible = false

local TopBar_2 = Instance.new("Frame", MainMenuWindow)
TopBar_2.Name = "TopBar"
TopBar_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
TopBar_2.BorderSizePixel = 0
TopBar_2.Size = UDim2.new(1, 0, 0, 65)

local CloseButton_2 = Instance.new("TextButton", TopBar_2)
CloseButton_2.Name = "CloseButton"
CloseButton_2.AnchorPoint = Vector2.new(1, 0)
CloseButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton_2.Position = UDim2.new(1, -1, 0, 1)
CloseButton_2.Size = UDim2.new(0, 57, 0, 57)
CloseButton_2.Text = "X"
CloseButton_2.Font = Enum.Font.GothamBold
CloseButton_2.TextColor3 = Color3.new(1,1,1)
CloseButton_2.TextScaled = true

local PageTitleText_2 = Instance.new("TextLabel", TopBar_2)
PageTitleText_2.Name = "PageTitleText"
PageTitleText_2.BackgroundTransparency = 1
PageTitleText_2.Position = UDim2.new(0, 10, 0.1, 0)
PageTitleText_2.Size = UDim2.new(0.8, 0, 0, 50)
PageTitleText_2.Text = "Extended Flee The Facility"
PageTitleText_2.Font = Enum.Font.GothamBold
PageTitleText_2.TextColor3 = Color3.new(1,1,1)
PageTitleText_2.TextScaled = true
PageTitleText_2.TextXAlignment = Enum.TextXAlignment.Left

local Body_2 = Instance.new("Frame", MainMenuWindow)
Body_2.Name = "Body"
Body_2.AnchorPoint = Vector2.new(0.5, 0)
Body_2.BackgroundTransparency = 1
Body_2.Position = UDim2.new(0.5, 0, 0, 60)
Body_2.Size = UDim2.new(1, -10, 1, -65)

local UIGridLayout_2 = Instance.new("UIGridLayout", Body_2)
UIGridLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
UIGridLayout_2.CellSize = UDim2.new(0, 210, 0, 210)

if isMobile() then
    PageTitleText_2.Position = UDim2.new(0, 10, 0, 0)
    PageTitleText_2.Size = UDim2.new(0.8, 0, 0, 40)
    CheatButton.Position = UDim2.new(-0.75, 0, 0.68, 0)
    CheatButton.Size = UDim2.new(1.7, 0, 1.7, 0)
    MainMenuWindow.Size = UDim2.new(0, 420, 0, 320)
    TopBar_2.Size = UDim2.new(1, 0, 0, 40)
    CloseButton_2.Size = UDim2.new(0, 36, 0, 36)
    UIGridLayout_2.CellSize = UDim2.new(0, 132, 0, 132)
    Body_2.Position = UDim2.new(0.5, 0, 0, 45)
    Body_2.Size = UDim2.new(1, -10, 1, -50)
end

local Button1 = Instance.new("ImageButton")
local Button2 = Instance.new("ImageButton")
local Button3 = Instance.new("ImageButton")
local Button4 = Instance.new("ImageButton")
local Button5 = Instance.new("ImageButton")
local Button6 = Instance.new("ImageButton")

--// Toggle system
local activeStates = {}
local function makeButton(btn, text, iconId, index, callback)
    btn.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    btn.Size = UDim2.new(0, 100, 0, 100)
    btn.Parent = Body_2

    local icon = Instance.new("ImageLabel", btn)
    icon.BackgroundTransparency = 1
    icon.AnchorPoint = Vector2.new(0.5,0.5)
    icon.Position = UDim2.new(0.5,0,0.45,0)
    icon.Size = UDim2.new(0.9,0,0.9,0)
    icon.Image = iconId or ""

    local bottom = Instance.new("TextLabel", btn)
    bottom.BackgroundTransparency = 1
    bottom.Position = UDim2.new(0, 0, 0.8, 0)
    bottom.Size = UDim2.new(1, 0, 0.2, 0)
    bottom.Text = text
    bottom.Font = Enum.Font.GothamBold
    bottom.TextColor3 = Color3.new(1,1,1)
    bottom.TextScaled = true

    activeStates[index] = false
    btn.MouseButton1Down:Connect(function()
        activeStates[index] = not activeStates[index]
        if activeStates[index] then
            btn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        else
            btn.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
        end
        if callback then callback(activeStates[index]) end
    end)
end

-- ===== HÀM HỖ TRỢ BEAST TRACKER =====
local beastTrackerRunning = false
local beastConnections = {}

local function ensureCooldownUI()
    local existing = plr.PlayerGui:FindFirstChild("BeastCooldownUI")
    if existing then
        return existing:FindFirstChild("CooldownLabel")
    end
    
    local gui = Instance.new("ScreenGui")
    gui.Name = "BeastCooldownUI"
    gui.Parent = plr.PlayerGui
    gui.ResetOnSpawn = false
    
    local label = Instance.new("TextLabel")
    label.Name = "CooldownLabel"
    label.Parent = gui
    label.Size = UDim2.new(0, 300, 0, 50)
    label.Position = UDim2.new(0.5, -150, 0, 100)
    label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    label.BackgroundTransparency = 0.5
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Text = "Finding beast..."
    
    return label
end

local function showBanner(text, name)
    local existing = plr.PlayerGui:FindFirstChild(name)
    if existing then existing:Destroy() end
    
    local gui = Instance.new("ScreenGui")
    gui.Name = name
    gui.Parent = plr.PlayerGui
    gui.ResetOnSpawn = false
    
    local frame = Instance.new("Frame")
    frame.Parent = gui
    frame.Size = UDim2.new(0, 400, 0, 80)
    frame.Position = UDim2.new(0.5, -200, 0.3, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    frame.BorderSizePixel = 0
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = frame
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    
    task.delay(3, function()
        if gui and gui.Parent then gui:Destroy() end
    end)
end

-- Cave check
local caveMin, caveMax = Vector3.new(-275,-10,-275), Vector3.new(-179,45,-179)
local function isOutsideCave(p)
    if not p then return false end
    return p.X < caveMin.X or p.X > caveMax.X or p.Y < caveMin.Y or p.Y > caveMax.Y or p.Z < caveMin.Z or p.Z > caveMax.Z
end

local function disconnectBeastTracker()
    if _G.BeastHeartbeat then
        _G.BeastHeartbeat:Disconnect()
        _G.BeastHeartbeat = nil
    end
    
    for _, conn in ipairs(beastConnections) do
        if typeof(conn) == "RBXScriptConnection" then
            conn:Disconnect()
        end
    end
    beastConnections = {}
end

local function setBeastTrackerVisible(state)
    local g = plr.PlayerGui:FindFirstChild("BeastCooldownUI")
    if g and g:IsA("ScreenGui") then
        g.Enabled = state
    end
end

-- ===== BEAST TRACKER =====
local beast, foundBeast, skill = nil, false, "Unknown"
local cooldownStart, usedRunner, stalkerActive = nil, false, false
local labelCooldown = nil

local function startBeastTracker()
    if beastTrackerRunning then return end
    beastTrackerRunning = true
    labelCooldown = ensureCooldownUI()
    setBeastTrackerVisible(true)

    beast, foundBeast, skill = nil, false, "Unknown"
    cooldownStart, usedRunner, stalkerActive = nil, false, false

    local runningDots = false
    task.spawn(function()
        if runningDots then return end
        runningDots = true
        local dots = 0
        while task.wait(0.5) do
            if not foundBeast and labelCooldown and labelCooldown.Parent then
                dots = (dots % 3) + 1
                labelCooldown.Text = "Finding new beast" .. string.rep(".", dots)
            end
        end
    end)

    local function detectSkillWhenGameActive()
        task.spawn(function()
            local gameActive = Replicated:WaitForChild("IsGameActive")
            if gameActive:IsA("BoolValue") then
                repeat task.wait(0.5) until gameActive.Value == true
            end

            if not foundBeast or not beast or not Players:FindFirstChild(beast.Name) then return end

            local power
            repeat
                power = Replicated:FindFirstChild("CurrentPower")
                task.wait(0.5)
            until power and power:IsA("StringValue")

            if not foundBeast or not beast or not Players:FindFirstChild(beast.Name) then return end

            skill = tostring(power.Value):lower()
            showBanner("Beast chose " .. skill, "SkillChosenBanner")

            power:GetPropertyChangedSignal("Value"):Connect(function()
                if foundBeast and beast and Players:FindFirstChild(beast.Name) then
                    skill = tostring(power.Value):lower()
                end
            end)
        end)
    end

    local function isBeast(player)
        if not player then return false end
        local s = player:FindFirstChild("TempPlayerStatsModule")
        return s and s:FindFirstChild("IsBeast") and s.IsBeast.Value
    end

    local runningScan = false
    task.spawn(function()
        if runningScan then return end
        runningScan = true
        while task.wait(0.05) do
            if foundBeast then
                if not beast or not Players:FindFirstChild(beast.Name) or not isBeast(beast) then
                    beast, foundBeast, skill = nil, false, "Unknown"
                    cooldownStart, usedRunner, stalkerActive = nil, false, false
                    if labelCooldown then labelCooldown.Text = "Finding new beast..." end
                end
            end

            if not foundBeast then
                for _, p in ipairs(Players:GetPlayers()) do
                    if isBeast(p) then
                        beast, foundBeast = p, true
                        showBanner(beast.Name .. " is Beast!!!", "BeastBanner")
                        detectSkillWhenGameActive()
                        if labelCooldown then labelCooldown.Text = "Found beast!!!" end
                        task.delay(2.5, function()
                            if foundBeast and labelCooldown then
                                labelCooldown.Text = "Cooldown: Perk Ready!!!"
                            end
                        end)
                        break
                    end
                end
            end
        end
    end)

    if _G.BeastHeartbeat then
        _G.BeastHeartbeat:Disconnect()
    end

    _G.BeastHeartbeat = RunService.Heartbeat:Connect(function()
        if not foundBeast or not beast or not Players:FindFirstChild(beast.Name) then return end
        if not labelCooldown or not labelCooldown.Parent then return end

        local hum = beast.Character and beast.Character:FindFirstChild("Humanoid")
        local root = beast.Character and beast.Character:FindFirstChild("HumanoidRootPart")
        if not hum then return end

        if skill == "runner" then
            if hum.WalkSpeed > 19 and not usedRunner then
                usedRunner = true
                showBanner("Beast used Q (Runner) !!!", "RunnerUsedBanner")

                task.spawn(function()
                    local startUse = tick()
                    repeat
                        if not foundBeast then return end
                        if labelCooldown and labelCooldown.Parent then
                            labelCooldown.Text = string.format("Using Runner (%.1fs)", math.max(0, 3 - (tick() - startUse)))
                        end
                        RunService.Heartbeat:Wait()
                    until tick() - startUse >= 3

                    local startCD = tick()
                    repeat
                        if not foundBeast then return end
                        if labelCooldown and labelCooldown.Parent then
                            labelCooldown.Text = string.format("Cooldown: %.1fs", math.max(0, 22 - (tick() - startCD)))
                        end
                        RunService.Heartbeat:Wait()
                    until tick() - startCD >= 22

                    if foundBeast and labelCooldown and labelCooldown.Parent then
                        labelCooldown.Text = "Cooldown: Runner Ready!!!"
                    end
                    usedRunner = false
                end)
            end

        elseif skill == "stalker" then
            local anyOff = false
            for _, o in ipairs(beast.Character:GetDescendants()) do
                if o:IsA("PointLight") or o:IsA("SurfaceLight") or o:IsA("SpotLight") then
                    if not o.Enabled or (o.Brightness and o.Brightness == 0) then
                        anyOff = true
                        break
                    end
                end
            end

            if root and anyOff and not stalkerActive and isOutsideCave(root.Position) then
                stalkerActive = true
                showBanner("Beast used Q (Stalker) !!!", "StalkerUsedBanner")

                task.spawn(function()
                    local startUse = tick()
                    repeat
                        if not foundBeast then return end
                        if labelCooldown and labelCooldown.Parent then
                            labelCooldown.Text = string.format("Using Stalker (%.1fs)", math.max(0, 7 - (tick() - startUse)))
                        end
                        RunService.Heartbeat:Wait()
                    until tick() - startUse >= 7

                    local startCD = tick()
                    repeat
                        if not foundBeast then return end
                        if labelCooldown and labelCooldown.Parent then
                            labelCooldown.Text = string.format("Cooldown: %.1fs", math.max(0, 20 - (tick() - startCD)))
                        end
                        RunService.Heartbeat:Wait()
                    until tick() - startCD >= 20

                    if foundBeast and labelCooldown and labelCooldown.Parent then
                        labelCooldown.Text = "Cooldown: Stalker Ready!!!"
                    end
                    stalkerActive = false
                end)
            end
        end
    end)
end

local function stopBeastTracker()
    beastTrackerRunning = false
    setBeastTrackerVisible(false)
    disconnectBeastTracker()
end

-- ===== PC PROGRESS =====
local pcProgressRunning = false
local pcConnections = {}

local function disconnectPCProgress()
    for _,c in ipairs(pcConnections) do
        if typeof(c) == "RBXScriptConnection" then
            c:Disconnect()
        end
    end
    pcConnections = {}
end

local function stopPCProgress()
    disconnectPCProgress()
    for _,v in pairs(workspace:GetDescendants()) do
        if v:IsA("BillboardGui") and v.Name == "PCProgressBB" then
            v.Enabled = false
        end
    end
    pcProgressRunning = false
end

local function startPCProgress()
    if pcProgressRunning then return end
    pcProgressRunning = true

    local RS = Replicated
    local Camera = workspace.CurrentCamera
    local LocalPlayer = plr

    local pcLabels, finished, pcState, hookedPCs, lastPercent = {}, {}, {}, {}, {}
    local pendingUpdate = {}
    local UPDATE_INTERVAL = 0.1
    local SHOW_DISTANCE_SURV = 40
    local SHOW_DISTANCE_BEAST = 20
    local currentShowDist = SHOW_DISTANCE_SURV
    local CHECK_OFFSET = Vector3.new(0, 1, 0)
    local CHECK_RADIUS = 2

    local function findAttachPart(pc)
        if pc:IsA("Model") then
            local scr = pc:FindFirstChild("Screen")
            if scr and scr:IsA("BasePart") then return scr end
            if pc.PrimaryPart then return pc.PrimaryPart end
            for _,d in ipairs(pc:GetDescendants()) do
                if d:IsA("BasePart") then return d end
            end
        elseif pc:IsA("BasePart") then
            return pc
        end
        return nil
    end

    local function createBillboard(pc)
        if pcLabels[pc] then return pcLabels[pc] end
        local part = findAttachPart(pc)
        if not part then return end
        local bb = Instance.new("BillboardGui")
        bb.Name = "PCProgressBB"
        bb.Size = UDim2.new(0, 100, 0, 40)
        bb.StudsOffset = Vector3.new(0, 2, 0)
        bb.AlwaysOnTop = true
        bb.Adornee = part
        bb.Parent = part
        local tl = Instance.new("TextLabel")
        tl.Size = UDim2.new(1,0,1,0)
        tl.BackgroundTransparency = 1
        tl.TextColor3 = Color3.new(1,1,1)
        tl.Font = Enum.Font.GothamBold
        tl.TextScaled = true
        tl.Text = "0%"
        tl.Visible = true
        tl.Parent = bb
        pcLabels[pc] = {label = tl, bb = bb, part = part}
        lastPercent[pc] = 0
        return pcLabels[pc]
    end

    local function clearAll()
        for _,v in pairs(pcLabels) do
            if v.bb then v.bb:Destroy() end
        end
        pcLabels, finished, pcState, hookedPCs, lastPercent, pendingUpdate = {}, {}, {}, {}, {}, {}
    end

    local function isVisible(part)
        if not part then return false end
        local camPos = Camera.CFrame.Position
        local partPos = part.Position + CHECK_OFFSET
        local dir = (partPos - camPos).Unit * (partPos - camPos).Magnitude
        local params = RaycastParams.new()
        params.FilterDescendantsInstances = {LocalPlayer.Character, unpack(Players:GetPlayers())}
        params.FilterType = Enum.RaycastFilterType.Blacklist
        local result = workspace:Raycast(camPos, dir, params)
        if not result then return true end
        if result.Instance:IsDescendantOf(part.Parent) then
            return true
        end
        for _, offset in ipairs({
            Vector3.new(CHECK_RADIUS, 0, 0),
            Vector3.new(-CHECK_RADIUS, 0, 0),
            Vector3.new(0, CHECK_RADIUS, 0),
            Vector3.new(0, -CHECK_RADIUS, 0),
            Vector3.new(0, 0, CHECK_RADIUS),
            Vector3.new(0, 0, -CHECK_RADIUS)
        }) do
            local p = partPos + offset
            local dir2 = (p - camPos).Unit * (p - camPos).Magnitude
            local r = workspace:Raycast(camPos, dir2, params)
            if not r or r.Instance:IsDescendantOf(part.Parent) then
                return true
            end
        end
        return false
    end

    local function queueProgress(pc, value)
        if finished[pc] then return end
        if pcState[pc] == "ERROR" or pcState[pc] == "DONE" then return end
        local percent = math.floor(value * 100 + 0.5)
        if percent >= 100 then
            percent = 100
            finished[pc] = true
        end
        if percent ~= (lastPercent[pc] or -1) then
            if percent == 0 and (lastPercent[pc] or 0) > 0 then
                return
            end
            lastPercent[pc] = percent
            pendingUpdate[pc] = tostring(percent).."%"
        end
    end

    table.insert(pcConnections, task.spawn(function()
        while pcProgressRunning do
            for pc,text in pairs(pendingUpdate) do
                local pack = createBillboard(pc)
                if pack then
                    if pack.label.Text ~= text then
                        pack.label.Text = text
                        pack.label.TextColor3 = Color3.new(1,1,1)
                    end
                end
                pendingUpdate[pc] = nil
            end
            task.wait(UPDATE_INTERVAL)
        end
    end))

    local function nearestPC(pos, maxDist)
        local best,bd = nil, maxDist or 30
        for pc,_ in pairs(pcLabels) do
            local part = pcLabels[pc].part
            if part then
                local dist = (part.Position - pos).Magnitude
                if dist < bd then
                    best, bd = pc, dist
                end
            end
        end
        return best
    end

    local function onActionProgress(plr, value)
        local tps = plr:FindFirstChild("TempPlayerStatsModule")
        if not tps then return end
        local currentAnim = tps:FindFirstChild("CurrentAnimation")
        if not currentAnim or currentAnim.Value ~= "Typing" then return end
        if not plr.Character then return end
        local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        local pc = nearestPC(hrp.Position, 35)
        if pc then
            queueProgress(pc, value)
        end
    end

    local function hookPlayer(plr)
        local function attach(c)
            if c.Name == "TempPlayerStatsModule" then
                local ap = c:WaitForChild("ActionProgress", 10)
                if ap and ap:IsA("NumberValue") then
                    table.insert(pcConnections, ap:GetPropertyChangedSignal("Value"):Connect(function()
                        onActionProgress(plr, ap.Value)
                    end))
                end
            end
        end
        plr.ChildAdded:Connect(attach)
        local tps = plr:FindFirstChild("TempPlayerStatsModule")
        if tps then attach(tps) end
    end
    for _,p in ipairs(Players:GetPlayers()) do hookPlayer(p) end
    table.insert(pcConnections, Players.PlayerAdded:Connect(hookPlayer))

    local function updateRole()
        local stats = LocalPlayer:FindFirstChild("TempPlayerStatsModule") or LocalPlayer:FindFirstChild("PlayerStats")
        if stats then
            local isBeast = stats:FindFirstChild("IsBeast")
            if isBeast then
                if isBeast.Value == true then
                    currentShowDist = SHOW_DISTANCE_BEAST
                else
                    currentShowDist = SHOW_DISTANCE_SURV
                end
            end
        end
    end
    local function watchStats()
        local stats = LocalPlayer:FindFirstChild("TempPlayerStatsModule") or LocalPlayer:FindFirstChild("PlayerStats")
        if stats then
            local isBeast = stats:FindFirstChild("IsBeast")
            if isBeast then
                table.insert(pcConnections, isBeast.Changed:Connect(updateRole))
                updateRole()
            end
        end
    end
    LocalPlayer.CharacterAdded:Connect(function()
        task.wait(0.5)
        watchStats()
    end)
    watchStats()

    local function applyScreenState(pc, c)
        local pack = createBillboard(pc)
        if not pack then return end
        if c.G > c.R + 0.2 and c
