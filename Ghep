--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Replicated = game:GetService("ReplicatedStorage")

--// Local Player
local plr = Players.LocalPlayer
repeat task.wait() until plr and plr:FindFirstChild("PlayerGui")

--// Intro
local guiIntro = Instance.new("ScreenGui")
guiIntro.Parent = plr.PlayerGui
guiIntro.ResetOnSpawn = false
guiIntro.Name = "IntroGui"

local frameIntro = Instance.new("Frame")
frameIntro.Parent = guiIntro
frameIntro.Size = UDim2.new(1,0,1,0)
frameIntro.BackgroundTransparency = 1

local function createText(t,y,s)
    local l = Instance.new("TextLabel")
    l.Parent = frameIntro
    l.Text = t
    l.Size = UDim2.new(0,600,0,60)
    l.Position = UDim2.new(0.5,0,0.5,y)
    l.AnchorPoint = Vector2.new(0.5,0.5)
    l.BackgroundTransparency = 1
    l.TextColor3 = Color3.new(1,1,1)
    l.TextStrokeTransparency = 0.2
    l.TextStrokeColor3 = Color3.fromRGB(0,170,255)
    l.Font = Enum.Font.GothamBold
    l.TextTransparency = 1
    l.TextScaled = false
    l.TextSize = s or 36
    return l
end

local main = createText("script made by trongluong",-35,38)
local sub = createText("ver 1.0.0",10,26)

local function fade(lbl, a)
    if lbl and lbl.Parent then
        TweenService:Create(lbl, TweenInfo.new(1), {TextTransparency = a}):Play()
    end
end

fade(main,0); fade(sub,0)
task.wait(2)
fade(main,1); fade(sub,1)
task.wait(1.5)
pcall(function() guiIntro:Destroy() end)

--// MAIN MENU
local ver = "v0.3.4"
local FTFHAX = Instance.new("ScreenGui", plr.PlayerGui)
FTFHAX.Name = "FTFHAX"

local MenusTabFrame = Instance.new("Frame", FTFHAX)
MenusTabFrame.Name = "MenusTabFrame"
MenusTabFrame.AnchorPoint = Vector2.new(1, 0.5)
MenusTabFrame.BackgroundTransparency = 1
MenusTabFrame.Position = UDim2.new(1, 0, 0.5, 0)
MenusTabFrame.Size = UDim2.new(0.08, 0, 0.16, 0)
MenusTabFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY

local CheatButton = Instance.new("ImageButton", MenusTabFrame)
CheatButton.Name = "CheatButton"
CheatButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CheatButton.BackgroundTransparency = 0.5
CheatButton.BorderSizePixel = 0
CheatButton.Position = UDim2.new(-0.08, 0, 0.79, 0)
CheatButton.Size = UDim2.new(1.12, 0, 1.12, 0)
CheatButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
CheatButton.Image = "rbxassetid://7059346373"

local TextLabel = Instance.new("TextLabel", CheatButton)
TextLabel.AnchorPoint = Vector2.new(0, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0, 0, 1, 0)
TextLabel.Size = UDim2.new(1, 0, 0.2, 0)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "setting"
TextLabel.TextColor3 = Color3.new(1,1,1)
TextLabel.TextScaled = true
TextLabel.TextStrokeTransparency = 0
TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom

local MainMenuWindow = Instance.new("Frame", FTFHAX)
MainMenuWindow.Name = "MainMenuWindow"
MainMenuWindow.AnchorPoint = Vector2.new(0.5, 0.5)
MainMenuWindow.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
MainMenuWindow.BorderSizePixel = 2
MainMenuWindow.Position = UDim2.new(0.5, 0, 0.5, -29)
MainMenuWindow.Size = UDim2.new(0, 672, 0, 510)
MainMenuWindow.Visible = false

local TopBar_2 = Instance.new("Frame", MainMenuWindow)
TopBar_2.Name = "TopBar"
TopBar_2.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
TopBar_2.Size = UDim2.new(1, 0, 0, 65)

local CloseButton_2 = Instance.new("TextButton", TopBar_2)
CloseButton_2.Name = "CloseButton"
CloseButton_2.AnchorPoint = Vector2.new(1, 0)
CloseButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton_2.Position = UDim2.new(1, -1, 0, 1)
CloseButton_2.Size = UDim2.new(0, 57, 0, 57)
CloseButton_2.Text = "X"
CloseButton_2.Font = Enum.Font.GothamBold
CloseButton_2.TextColor3 = Color3.new(1,1,1)
CloseButton_2.TextScaled = true

local PageTitleText_2 = Instance.new("TextLabel", TopBar_2)
PageTitleText_2.Name = "PageTitleText"
PageTitleText_2.BackgroundTransparency = 1
PageTitleText_2.Position = UDim2.new(0, 10, 0.1, 0)
PageTitleText_2.Size = UDim2.new(0.8, 0, 0, 50)
PageTitleText_2.Text = "Extended Flee The Facility"
PageTitleText_2.Font = Enum.Font.GothamBold
PageTitleText_2.TextColor3 = Color3.new(1,1,1)
PageTitleText_2.TextScaled = true
PageTitleText_2.TextXAlignment = Enum.TextXAlignment.Left

local Body_2 = Instance.new("Frame", MainMenuWindow)
Body_2.Name = "Body"
Body_2.AnchorPoint = Vector2.new(0.5, 0)
Body_2.BackgroundTransparency = 1
Body_2.Position = UDim2.new(0.5, 0, 0, 60)
Body_2.Size = UDim2.new(1, -10, 1, -65)

local UIGridLayout_2 = Instance.new("UIGridLayout", Body_2)
UIGridLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
UIGridLayout_2.CellSize = UDim2.new(0, 210, 0, 210)

local Button1 = Instance.new("ImageButton")
local Button2 = Instance.new("ImageButton")
local Button3 = Instance.new("ImageButton")
local Button4 = Instance.new("ImageButton")
local Button5 = Instance.new("ImageButton")
local Button6 = Instance.new("ImageButton")

--// Toggle system
local activeStates = {}
local function makeButton(btn, text, iconId, index, callback)
    btn.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
    btn.Size = UDim2.new(0, 100, 0, 100)
    btn.Parent = Body_2

    local icon = Instance.new("ImageLabel", btn)
    icon.BackgroundTransparency = 1
    icon.AnchorPoint = Vector2.new(0.5,0.5)
    icon.Position = UDim2.new(0.5,0,0.45,0)
    icon.Size = UDim2.new(0.9,0,0.9,0)
    icon.Image = iconId or ""

    local bottom = Instance.new("TextLabel", btn)  
    bottom.BackgroundTransparency = 1  
    bottom.Position = UDim2.new(0, 0, 0.8, 0)  
    bottom.Size = UDim2.new(1, 0, 0.2, 0)  
    bottom.Text = text  
    bottom.Font = Enum.Font.GothamBold  
    bottom.TextColor3 = Color3.new(1,1,1)  
    bottom.TextScaled = true  

    activeStates[index] = false
    btn.MouseButton1Down:Connect(function()
        activeStates[index] = not activeStates[index]
        if activeStates[index] then
            btn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        else
            btn.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
        end
        if callback then callback(activeStates[index]) end
    end)
end   -- ✅ đóng hàm ở đây

local function setBeastTrackerVisible(state)
    local g = plr.PlayerGui:FindFirstChild("BeastCooldownUI")
    if g and g:IsA("ScreenGui") then
        g.Enabled = state
    end
end

-- ===== Beast Tracker =====
local beastTrackerRunning = false
local beastConnections = {}

-- Tạo cooldown GUI (duy nhất 1 lần, ẩn khi OFF)
local function ensureCooldownUI()
    local PlayerGui = plr:WaitForChild("PlayerGui")
    local gui = PlayerGui:FindFirstChild("BeastCooldownUI")
    if not gui then
        gui = Instance.new("ScreenGui")
        gui.Name = "BeastCooldownUI"
        gui.ResetOnSpawn = false
        gui.IgnoreGuiInset = true
        gui.Enabled = false
        gui.Parent = PlayerGui

        local frame = Instance.new("Frame", gui)
        frame.Size = UDim2.new(0,180,0,40)
        frame.Position = UDim2.new(0.5,-90,0.8,0)
        frame.BackgroundTransparency = 0.3
        frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
        frame.BorderSizePixel = 0
        frame.Active = true

        local label = Instance.new("TextLabel", frame)
        label.Name = "CooldownLabel"
        label.Size = UDim2.new(1,0,1,0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1,1,1)
        label.Font = Enum.Font.SourceSansBold
        label.TextScaled = true
        label.Text = "Finding beast..."

        -- Dragging
        local dragging, dragStart, startPos
        local function startDrag(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging, dragStart, startPos = true, input.Position, frame.Position
            end
        end
        local function stopDrag(input)
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end
        local function updateDrag(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                           startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end
        frame.InputBegan:Connect(startDrag)
        frame.InputEnded:Connect(stopDrag)
        label.InputBegan:Connect(startDrag)
        label.InputEnded:Connect(stopDrag)
        table.insert(beastConnections, UIS.InputChanged:Connect(updateDrag))
    end

    -- 🔄 Loop update "Finding beast..."
    task.spawn(function()
        local dots = 0
        while beastTrackerRunning and not foundBeast do
            local lbl = gui:FindFirstChild("CooldownLabel", true)
            if lbl then
                dots = (dots % 3) + 1
                lbl.Text = "Finding beast" .. string.rep(".", dots)
            end
            task.wait(0.5)
        end
    end)

    return gui:FindFirstChild("CooldownLabel", true)
end

local function disconnectBeastTracker()
    for _,c in ipairs(beastConnections) do
        if typeof(c) == "RBXScriptConnection" then
            c:Disconnect()
        end
    end
    beastConnections = {}
end

local function stopBeastTracker()
    disconnectBeastTracker()
    local gui = plr.PlayerGui:FindFirstChild("BeastCooldownUI")
    if gui then gui.Enabled = false end  -- chỉ ẩn, không xoá
    setBeastTrackerVisible(false)
    beastTrackerRunning = false
end

local function startBeastTracker()
    if beastTrackerRunning then return end
    beastTrackerRunning = true

    local labelCooldown = ensureCooldownUI()
    if labelCooldown and labelCooldown.Parent and labelCooldown.Parent.Parent then
        labelCooldown.Parent.Parent.Enabled = true
    end

    local PlayerGui = plr:WaitForChild("PlayerGui")

    -- Cave check
    local caveMin, caveMax = Vector3.new(-275,-10,-275), Vector3.new(-179,45,-179)
    local function isOutsideCave(p)
        if not p then return false end
        return p.X < caveMin.X or p.X > caveMax.X or
               p.Y < caveMin.Y or p.Y > caveMax.Y or
               p.Z < caveMin.Z or p.Z > caveMax.Z
    end

    -- Rainbow border
    local function createRainbowBorder(frame)
        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
            ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 127, 0)),
            ColorSequenceKeypoint.new(0.33, Color3.fromRGB(255, 255, 0)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
            ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
            ColorSequenceKeypoint.new(0.83, Color3.fromRGB(75, 0, 130)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(148, 0, 211)),
        })
        gradient.Parent = frame
        local conn
        conn = RunService.RenderStepped:Connect(function()
            if gradient and gradient.Parent then
                gradient.Rotation = (gradient.Rotation + 1) % 360
            else
                conn:Disconnect()
            end
        end)
        table.insert(beastConnections, conn)
    end

    -- Banner
    local function showBanner(text, name)
        if PlayerGui:FindFirstChild(name) then return end
        local gui = Instance.new("ScreenGui", PlayerGui)
        gui.Name = name
        local label = Instance.new("TextLabel", gui)
        label.Size = UDim2.new(0, 250, 0, 40)
        label.Position = UDim2.new(1, 10, 0, 10)
        label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        label.TextColor3 = Color3.new(1, 1, 1)
        label.Font = Enum.Font.SourceSansBold
        label.TextScaled = true
        label.Text = text
        createRainbowBorder(label)

        local tweenIn = TweenService:Create(label, TweenInfo.new(0.4), {Position = UDim2.new(1, -270, 0, 10)})
        local tweenOut = TweenService:Create(label, TweenInfo.new(0.4), {Position = UDim2.new(1, 10, 0, 10)})

        tweenIn:Play()
        tweenIn.Completed:Wait()
        task.delay(3.4, function()
            tweenOut:Play()
            tweenOut.Completed:Wait()
            gui:Destroy()
        end)
    end

    -- ==== CORE LOGIC detect Beast, skill, cooldown ====
    local beast, foundBeast, skill = nil, false, "Unknown"
    local runnerCD, stalkerCD = false, false

    local function detectBeast()
        for _, p in ipairs(Players:GetPlayers()) do
            local stats = p:FindFirstChild("TempPlayerStatsModule") or p:FindFirstChild("PlayerStats")
            if stats and stats:FindFirstChild("IsBeast") and stats.IsBeast.Value then
                return p
            end
        end
        return nil
    end

    local function detectSkill(b)
        if not b then return "Unknown" end
        local stats = b:FindFirstChild("TempPlayerStatsModule") or b:FindFirstChild("PlayerStats")
        if not stats then return "Unknown" end
        local chosen = stats:FindFirstChild("SkillChosen")
        return chosen and chosen.Value or "Unknown"
    end

    task.spawn(function()
        while beastTrackerRunning do
            beast = detectBeast()
            if beast and not foundBeast then
                foundBeast = true
                showBanner("Đã tìm thấy Beast !!!", "BeastBanner")

                local IsGameActive = Replicated:WaitForChild("IsGameActive")
                if IsGameActive.Value then
                    skill = detectSkill(beast)
                    showBanner("Beast chọn "..skill, "SkillChosenBanner")
                else        
                    skill = "Unknown"
                    IsGameActive:GetPropertyChangedSignal("Value"):Connect(function()
                        if IsGameActive.Value and skill == "Unknown" and foundBeast and beast then
                            skill = detectSkill(beast)
                            showBanner("Beast chọn "..skill, "SkillChosenBanner")
                        end
                    end)
                end
            end  
            task.wait(1)
        end      
    end)  
end      

-- ===== PC Progress =====
local pcProgressRunning = false
local pcConnections = {}

local function disconnectPCProgress()
    for _,c in ipairs(pcConnections) do
        if typeof(c) == "RBXScriptConnection" then
            c:Disconnect()
        end
    end
    pcConnections = {}
end

local function stopPCProgress()
    disconnectPCProgress()
    for _,v in pairs(workspace:GetDescendants()) do
        if v:IsA("BillboardGui") and v.Name == "PCProgressBB" then
            v.Enabled = false
        end
    end
    pcProgressRunning = false
end

local function startPCProgress()
    if pcProgressRunning then return end
    pcProgressRunning = true

    local RS = Replicated
    local Camera = workspace.CurrentCamera
    local LocalPlayer = plr

    local pcLabels, finished, pcState, hookedPCs, lastPercent = {}, {}, {}, {}, {}
    local pendingUpdate = {}
    local UPDATE_INTERVAL = 0.1
    local SHOW_DISTANCE_SURV = 40
    local SHOW_DISTANCE_BEAST = 20
    local currentShowDist = SHOW_DISTANCE_SURV
    local CHECK_OFFSET = Vector3.new(0, 1, 0)
    local CHECK_RADIUS = 2

    -- Billboard
    local function findAttachPart(pc)
        if pc:IsA("Model") then
            local scr = pc:FindFirstChild("Screen")
            if scr and scr:IsA("BasePart") then return scr end
            if pc.PrimaryPart then return pc.PrimaryPart end
            for _,d in ipairs(pc:GetDescendants()) do
                if d:IsA("BasePart") then return d end
            end
        elseif pc:IsA("BasePart") then
            return pc
        end
        return nil
    end

    local function createBillboard(pc)
        if pcLabels[pc] then return pcLabels[pc] end
        local part = findAttachPart(pc)
        if not part then return end
        local bb = Instance.new("BillboardGui")
        bb.Name = "PCProgressBB"
        bb.Size = UDim2.new(0, 100, 0, 40)
        bb.StudsOffset = Vector3.new(0, 2, 0)
        bb.AlwaysOnTop = true
        bb.Adornee = part
        bb.Parent = part
        local tl = Instance.new("TextLabel")
        tl.Size = UDim2.new(1,0,1,0)
        tl.BackgroundTransparency = 1
        tl.TextColor3 = Color3.new(1,1,1)
        tl.Font = Enum.Font.GothamBold
        tl.TextScaled = true
        tl.Text = "0%"
        tl.Visible = true
        tl.Parent = bb
        pcLabels[pc] = {label = tl, bb = bb, part = part}
        lastPercent[pc] = 0
        return pcLabels[pc]
    end

    local function clearAll()
        for _,v in pairs(pcLabels) do
            if v.bb then v.bb:Destroy() end
        end
        pcLabels, finished, pcState, hookedPCs, lastPercent, pendingUpdate = {}, {}, {}, {}, {}, {}
    end

    -- Visibility check
    local function isVisible(part)
        if not part then return false end
        local camPos = Camera.CFrame.Position
        local partPos = part.Position + CHECK_OFFSET
        local dir = (partPos - camPos).Unit * (partPos - camPos).Magnitude
        local params = RaycastParams.new()
        params.FilterDescendantsInstances = {LocalPlayer.Character, unpack(Players:GetPlayers())}
        params.FilterType = Enum.RaycastFilterType.Blacklist
        local result = workspace:Raycast(camPos, dir, params)
        if not result then return true end
        if result.Instance:IsDescendantOf(part.Parent) then
            return true
        end
        for _, offset in ipairs({
            Vector3.new(CHECK_RADIUS, 0, 0),
            Vector3.new(-CHECK_RADIUS, 0, 0),
            Vector3.new(0, CHECK_RADIUS, 0),
            Vector3.new(0, -CHECK_RADIUS, 0),
            Vector3.new(0, 0, CHECK_RADIUS),
            Vector3.new(0, 0, -CHECK_RADIUS)
        }) do
            local p = partPos + offset
            local dir2 = (p - camPos).Unit * (p - camPos).Magnitude
            local r = workspace:Raycast(camPos, dir2, params)
            if not r or r.Instance:IsDescendantOf(part.Parent) then
                return true
            end
        end
        return false
    end

    -- Progress update
    local function queueProgress(pc, value)
        if finished[pc] then return end
        if pcState[pc] == "ERROR" or pcState[pc] == "DONE" then return end
        local percent = math.floor(value * 100 + 0.5)
        if percent >= 100 then
            percent = 100
            finished[pc] = true
        end
        if percent ~= (lastPercent[pc] or -1) then
            if percent == 0 and (lastPercent[pc] or 0) > 0 then
                return
            end
            lastPercent[pc] = percent
            pendingUpdate[pc] = tostring(percent).."%"
        end
    end

    table.insert(pcConnections, task.spawn(function()
        while pcProgressRunning do
            for pc,text in pairs(pendingUpdate) do
                local pack = createBillboard(pc)
                if pack then
                    if pack.label.Text ~= text then
                        pack.label.Text = text
                        pack.label.TextColor3 = Color3.new(1,1,1)
                    end
                end
                pendingUpdate[pc] = nil
            end
            task.wait(UPDATE_INTERVAL)
        end
    end))

    -- Hook vào ActionProgress
    local function nearestPC(pos, maxDist)
        local best,bd = nil, maxDist or 30
        for pc,_ in pairs(pcLabels) do
            local part = pcLabels[pc].part
            if part then
                local dist = (part.Position - pos).Magnitude
                if dist < bd then
                    best, bd = pc, dist
                end
            end
        end
        return best
    end

    local function onActionProgress(plr, value)
        local tps = plr:FindFirstChild("TempPlayerStatsModule")
        if not tps then return end
        local currentAnim = tps:FindFirstChild("CurrentAnimation")
        if not currentAnim or currentAnim.Value ~= "Typing" then return end
        if not plr.Character then return end
        local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        local pc = nearestPC(hrp.Position, 35)
        if pc then
            queueProgress(pc, value)
        end
    end

    local function hookPlayer(plr)
        local function attach(c)
            if c.Name == "TempPlayerStatsModule" then
                local ap = c:WaitForChild("ActionProgress", 10)
                if ap and ap:IsA("NumberValue") then
                    table.insert(pcConnections, ap:GetPropertyChangedSignal("Value"):Connect(function()
                        onActionProgress(plr, ap.Value)
                    end))
                end
            end
        end
        plr.ChildAdded:Connect(attach)
        local tps = plr:FindFirstChild("TempPlayerStatsModule")
        if tps then attach(tps) end
    end
    for _,p in ipairs(Players:GetPlayers()) do hookPlayer(p) end
    table.insert(pcConnections, Players.PlayerAdded:Connect(hookPlayer))

    -- Beast check để chỉnh khoảng cách hiển thị
    local function updateRole()
        local stats = LocalPlayer:FindFirstChild("TempPlayerStatsModule") or LocalPlayer:FindFirstChild("PlayerStats")
        if stats then
            local isBeast = stats:FindFirstChild("IsBeast")
            if isBeast then
                if isBeast.Value == true then
                    currentShowDist = SHOW_DISTANCE_BEAST
                else
                    currentShowDist = SHOW_DISTANCE_SURV
                end
            end
        end
    end
    local function watchStats()
        local stats = LocalPlayer:FindFirstChild("TempPlayerStatsModule") or LocalPlayer:FindFirstChild("PlayerStats")
        if stats then
            local isBeast = stats:FindFirstChild("IsBeast")
            if isBeast then
                table.insert(pcConnections, isBeast.Changed:Connect(updateRole))
                updateRole()
            end
        end
    end
    LocalPlayer.CharacterAdded:Connect(function()
        task.wait(0.5)
        watchStats()
    end)
    watchStats()

    -- Screen state (DONE / ERROR)
    local function applyScreenState(pc, c)
        local pack = createBillboard(pc)
        if not pack then return end
        if c.G > c.R + 0.2 and c.G > c.B + 0.2 then
            pcState[pc] = "DONE"
            pack.label.Text = "DONE"
            pack.label.TextColor3 = Color3.new(0,1,0)
        elseif c.R > c.G + 0.2 and c.R > c.B + 0.2 then
            pcState[pc] = "ERROR"
            pack.label.Text = "ERROR"
            pack.label.TextColor3 = Color3.new(1,0,0)
        else
            if not finished[pc] then
                pcState[pc] = nil
            end
        end
    end
    local function watchPC(pc)
        if hookedPCs[pc] then return end
        hookedPCs[pc] = true
        local scr = pc:FindFirstChild("Screen")
        if scr and scr:IsA("BasePart") then
            applyScreenState(pc, scr.Color)
            table.insert(pcConnections, scr:GetPropertyChangedSignal("Color"):Connect(function()
                applyScreenState(pc, scr.Color)
            end))
        end
    end

    -- Map Scan
    table.insert(pcConnections, task.spawn(function()
        while pcProgressRunning do
            local map = RS:FindFirstChild("CurrentMap") and RS.CurrentMap.Value
            if map then
                for _,d in ipairs(map:GetDescendants()) do
                    if d.Name == "ComputerTable" then
                        createBillboard(d)
                        watchPC(d)
                    end
                end
            end
            task.wait(1)
        end
    end))

    -- Render visibility
    table.insert(pcConnections, RunService.RenderStepped:Connect(function()
        local char = LocalPlayer.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        local camPos = Camera.CFrame.Position
        for pc,pack in pairs(pcLabels) do
            local part,label = pack.part, pack.label
            if part and label then
                local origin = hrp and hrp.Position or camPos
                local dist = (part.Position - origin).Magnitude
                if dist <= currentShowDist and isVisible(part) then
                    label.Visible = true
                else
                    label.Visible = false
                end
            end
        end
    end))

    -- Map Change reset
    if RS:FindFirstChild("CurrentMap") then
        table.insert(pcConnections, RS.CurrentMap.Changed:Connect(function()
            clearAll()
        end))
    end
end

-- ===== Sự kiện mở/đóng menu =====
CheatButton.MouseButton1Down:Connect(function()
    MainMenuWindow.Visible = not MainMenuWindow.Visible
end)
CloseButton_2.MouseButton1Down:Connect(function()
    MainMenuWindow.Visible = false
end)

-- 6 nút menu
makeButton(Button1,"Wallhop view","rbxassetid://16994563429",1,function(state)
    if state then
        print("Wallhop view bật")
        -- chèn script Wallhop của bạn vào đây
    else
        print("Wallhop view tắt")
        -- code tắt wallhop
    end
end)

makeButton(Button2,"Flashlight","rbxassetid://106585954087372",2,function(state)
    if state then
        print("Flashlight bật")
        -- chèn script Flashlight vào đây
    else
        print("Flashlight tắt")
        -- code tắt flashlight
    end
end)

makeButton(Button3,"Self muting","rbxassetid://90332761263250",3,function(state)
    if state then
        print("Self muting bật")
        -- chèn script Self muting vào đây
    else
        print("Self muting tắt")
        -- code tắt self muting
    end
end)

makeButton(Button4,"Beast tracker","rbxassetid://9125495609",4,function(state)
    if state then
        startBeastTracker()
        setBeastTrackerVisible(true)
    else
        stopBeastTracker()
    end
end)

makeButton(Button5,"Survivor tracker","rbxassetid://90682070728446",5,function(state)
    if state then
        print("Survivor tracker bật")
        -- chèn script Survivor tracker vào đây
    else
        print("Survivor tracker tắt")
        -- code tắt survivor tracker
    end
end)

makeButton(Button6,"PC progress","rbxassetid://12684119225",6,function(state)
    if state then
        startPCProgress()
    else
        stopPCProgress()
    end
end)
