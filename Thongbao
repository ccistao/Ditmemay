local Players = game:GetService("Players")
local Replicated = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

for _, name in ipairs({"RunnerUsedBanner", "SkillChosenBanner", "StalkerUsedBanner"}) do
	local old = PlayerGui:FindFirstChild(name)
	if old then old:Destroy() end
end

if _G.RunnerUsedConnection then _G.RunnerUsedConnection:Disconnect() end

local function createRainbowBorder(frame)
	local gradient = Instance.new("UIGradient")
	gradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
		ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 127, 0)),
		ColorSequenceKeypoint.new(0.33, Color3.fromRGB(255, 255, 0)),
		ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)),
		ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
		ColorSequenceKeypoint.new(0.83, Color3.fromRGB(75, 0, 130)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(148, 0, 211)),
	})
	gradient.Rotation = 0
	gradient.Parent = frame

	if _G.RainbowConnection then _G.RainbowConnection:Disconnect() end
	_G.RainbowConnection = RunService.RenderStepped:Connect(function()
		if gradient then gradient.Rotation = (gradient.Rotation + 1) % 360 end
	end)
end

local function showBanner(text, name)
	if PlayerGui:FindFirstChild(name) then return end
	local gui = Instance.new("ScreenGui", PlayerGui)
	gui.Name = name

	local label = Instance.new("TextLabel", gui)
	label.Size = UDim2.new(0, 250, 0, 40)
	label.Position = UDim2.new(1, 10, 0, 10)
	label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.SourceSansBold
	label.TextScaled = true
	label.Text = text

	createRainbowBorder(label)

	local tweenIn = TweenService:Create(label, TweenInfo.new(0.4), {Position = UDim2.new(1, -270, 0, 10)})
	local tweenOut = TweenService:Create(label, TweenInfo.new(0.4), {Position = UDim2.new(1, 10, 0, 10)})

	tweenIn:Play()
	tweenIn.Completed:Wait()

	task.delay(3.4, function()
		tweenOut:Play()
		tweenOut.Completed:Wait()
		gui:Destroy()
	end)
end

local function getBeast()
	for _, player in ipairs(Players:GetPlayers()) do
		local stats = player:FindFirstChild("TempPlayerStatsModule")
		if stats and stats:FindFirstChild("IsBeast") and stats.IsBeast.Value then
			return player
		end
	end
	return nil
end

local function watchLights(beast)
	task.spawn(function()
		local light
		repeat
			if beast and beast.Character then
				light = beast.Character:FindFirstChildWhichIsA("PointLight", true)
			end
			task.wait(0.1)
		until light and light:IsDescendantOf(workspace)

		local lightWasOn = light.Enabled and light.Brightness > 0

		while beast and beast.Character and light and light.Parent do
			local isNowOff = (not light.Enabled or light.Brightness == 0)
			if lightWasOn and isNowOff then
				showBanner("Beast đã dùng Q (Stalker) !!!", "StalkerUsedBanner")
				repeat task.wait(0.1) until light.Enabled and light.Brightness > 0
				lightWasOn = true
			else
				lightWasOn = light.Enabled and light.Brightness > 0
			end
			task.wait(0.1)
		end
	end)
end

local function startSkillScan()
	local foundSkill = false
	local skillName = "Không rõ"

	local function checkSkill(obj)
		if obj:IsA("StringValue") or obj:IsA("BoolValue") then
			local val = tostring(obj.Value):lower()
			if val:find("stalker") then
				skillName = "Stalker"
				foundSkill = true
			elseif val:find("runner") then
				skillName = "Runner"
				foundSkill = true
			end
		end
	end

	if _G.SkillScanConnection then _G.SkillScanConnection:Disconnect() end
	_G.SkillScanConnection = Replicated.DescendantAdded:Connect(function(obj)
		if not foundSkill then task.defer(checkSkill, obj) end
	end)

	task.spawn(function()
		local timeout = 10
		while not foundSkill and timeout > 0 do
			for _, obj in ipairs(Replicated:GetDescendants()) do
				if not foundSkill then checkSkill(obj) end
			end
			timeout -= 0.5
			task.wait(0.5)
		end

		if _G.SkillScanConnection then _G.SkillScanConnection:Disconnect() end

		task.delay(5, function()
                 showBanner("Beast đã chọn skill: " .. skillName, "SkillChosenBanner")
		end)
                if skillName == "Stalker" then
			local beast = getBeast()
			if beast then watchLights(beast) end
		end
	end)
end

local lastBeast = nil
local lastQ = false

task.spawn(function()
	while true do
		local currentBeast = getBeast()
		if currentBeast then
			if currentBeast ~= lastBeast then
				lastBeast = currentBeast
				lastQ = false
				startSkillScan()
			end

			local humanoid = currentBeast.Character and currentBeast.Character:FindFirstChild("Humanoid")
			if humanoid then
				local speed = humanoid.WalkSpeed
				if speed > 19 and not lastQ then
					lastQ = true
					showBanner("Beast đã dùng Q (Runner) !!!", "RunnerUsedBanner")
				elseif speed <= 19 then
					lastQ = false
				end
			end
		end
		task.wait(0.05)
	end
end)
